#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace canzalon_a4p5
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="canzalon_spjnum")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSPJ(SPJ instance);
    partial void UpdateSPJ(SPJ instance);
    partial void DeleteSPJ(SPJ instance);
    partial void InsertS(S instance);
    partial void UpdateS(S instance);
    partial void DeleteS(S instance);
    partial void InsertP(P instance);
    partial void UpdateP(P instance);
    partial void DeleteP(P instance);
    partial void InsertJ(J instance);
    partial void UpdateJ(J instance);
    partial void DeleteJ(J instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::canzalon_a4p5.Properties.Settings.Default.canzalon_spjnumConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SPJ> SPJs
		{
			get
			{
				return this.GetTable<SPJ>();
			}
		}
		
		public System.Data.Linq.Table<S> S
		{
			get
			{
				return this.GetTable<S>();
			}
		}
		
		public System.Data.Linq.Table<P> Ps
		{
			get
			{
				return this.GetTable<P>();
			}
		}
		
		public System.Data.Linq.Table<J> Js
		{
			get
			{
				return this.GetTable<J>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SPJ")]
	public partial class SPJ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _snum;
		
		private string _pnum;
		
		private string _jnum;
		
		private System.Nullable<int> _qty;
		
		private EntityRef<S> _S;
		
		private EntityRef<P> _P;
		
		private EntityRef<J> _J;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsnumChanging(string value);
    partial void OnsnumChanged();
    partial void OnpnumChanging(string value);
    partial void OnpnumChanged();
    partial void OnjnumChanging(string value);
    partial void OnjnumChanged();
    partial void OnqtyChanging(System.Nullable<int> value);
    partial void OnqtyChanged();
    #endregion
		
		public SPJ()
		{
			this._S = default(EntityRef<S>);
			this._P = default(EntityRef<P>);
			this._J = default(EntityRef<J>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_snum", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string snum
		{
			get
			{
				return this._snum;
			}
			set
			{
				if ((this._snum != value))
				{
					if (this._S.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsnumChanging(value);
					this.SendPropertyChanging();
					this._snum = value;
					this.SendPropertyChanged("snum");
					this.OnsnumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pnum", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string pnum
		{
			get
			{
				return this._pnum;
			}
			set
			{
				if ((this._pnum != value))
				{
					if (this._P.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpnumChanging(value);
					this.SendPropertyChanging();
					this._pnum = value;
					this.SendPropertyChanged("pnum");
					this.OnpnumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jnum", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string jnum
		{
			get
			{
				return this._jnum;
			}
			set
			{
				if ((this._jnum != value))
				{
					if (this._J.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnjnumChanging(value);
					this.SendPropertyChanging();
					this._jnum = value;
					this.SendPropertyChanged("jnum");
					this.OnjnumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qty", DbType="Int")]
		public System.Nullable<int> qty
		{
			get
			{
				return this._qty;
			}
			set
			{
				if ((this._qty != value))
				{
					this.OnqtyChanging(value);
					this.SendPropertyChanging();
					this._qty = value;
					this.SendPropertyChanged("qty");
					this.OnqtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="S_SPJ", Storage="_S", ThisKey="snum", OtherKey="snum", IsForeignKey=true)]
		public S S
		{
			get
			{
				return this._S.Entity;
			}
			set
			{
				S previousValue = this._S.Entity;
				if (((previousValue != value) 
							|| (this._S.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._S.Entity = null;
						previousValue.SPJs.Remove(this);
					}
					this._S.Entity = value;
					if ((value != null))
					{
						value.SPJs.Add(this);
						this._snum = value.snum;
					}
					else
					{
						this._snum = default(string);
					}
					this.SendPropertyChanged("S");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="P_SPJ", Storage="_P", ThisKey="pnum", OtherKey="pnum", IsForeignKey=true)]
		public P P
		{
			get
			{
				return this._P.Entity;
			}
			set
			{
				P previousValue = this._P.Entity;
				if (((previousValue != value) 
							|| (this._P.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._P.Entity = null;
						previousValue.SPJs.Remove(this);
					}
					this._P.Entity = value;
					if ((value != null))
					{
						value.SPJs.Add(this);
						this._pnum = value.pnum;
					}
					else
					{
						this._pnum = default(string);
					}
					this.SendPropertyChanged("P");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="J_SPJ", Storage="_J", ThisKey="jnum", OtherKey="jnum", IsForeignKey=true)]
		public J J
		{
			get
			{
				return this._J.Entity;
			}
			set
			{
				J previousValue = this._J.Entity;
				if (((previousValue != value) 
							|| (this._J.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._J.Entity = null;
						previousValue.SPJs.Remove(this);
					}
					this._J.Entity = value;
					if ((value != null))
					{
						value.SPJs.Add(this);
						this._jnum = value.jnum;
					}
					else
					{
						this._jnum = default(string);
					}
					this.SendPropertyChanged("J");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.S")]
	public partial class S : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _snum;
		
		private string _sname;
		
		private System.Nullable<int> _status;
		
		private string _city;
		
		private EntitySet<SPJ> _SPJs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsnumChanging(string value);
    partial void OnsnumChanged();
    partial void OnsnameChanging(string value);
    partial void OnsnameChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    #endregion
		
		public S()
		{
			this._SPJs = new EntitySet<SPJ>(new Action<SPJ>(this.attach_SPJs), new Action<SPJ>(this.detach_SPJs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_snum", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string snum
		{
			get
			{
				return this._snum;
			}
			set
			{
				if ((this._snum != value))
				{
					this.OnsnumChanging(value);
					this.SendPropertyChanging();
					this._snum = value;
					this.SendPropertyChanged("snum");
					this.OnsnumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sname", DbType="VarChar(20)")]
		public string sname
		{
			get
			{
				return this._sname;
			}
			set
			{
				if ((this._sname != value))
				{
					this.OnsnameChanging(value);
					this.SendPropertyChanging();
					this._sname = value;
					this.SendPropertyChanged("sname");
					this.OnsnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(10)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="S_SPJ", Storage="_SPJs", ThisKey="snum", OtherKey="snum")]
		public EntitySet<SPJ> SPJs
		{
			get
			{
				return this._SPJs;
			}
			set
			{
				this._SPJs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SPJs(SPJ entity)
		{
			this.SendPropertyChanging();
			entity.S = this;
		}
		
		private void detach_SPJs(SPJ entity)
		{
			this.SendPropertyChanging();
			entity.S = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.P")]
	public partial class P : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _pnum;
		
		private string _pname;
		
		private string _color;
		
		private System.Nullable<int> _weight;
		
		private string _city;
		
		private EntitySet<SPJ> _SPJs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpnumChanging(string value);
    partial void OnpnumChanged();
    partial void OnpnameChanging(string value);
    partial void OnpnameChanged();
    partial void OncolorChanging(string value);
    partial void OncolorChanged();
    partial void OnweightChanging(System.Nullable<int> value);
    partial void OnweightChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    #endregion
		
		public P()
		{
			this._SPJs = new EntitySet<SPJ>(new Action<SPJ>(this.attach_SPJs), new Action<SPJ>(this.detach_SPJs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pnum", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string pnum
		{
			get
			{
				return this._pnum;
			}
			set
			{
				if ((this._pnum != value))
				{
					this.OnpnumChanging(value);
					this.SendPropertyChanging();
					this._pnum = value;
					this.SendPropertyChanged("pnum");
					this.OnpnumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pname", DbType="VarChar(20)")]
		public string pname
		{
			get
			{
				return this._pname;
			}
			set
			{
				if ((this._pname != value))
				{
					this.OnpnameChanging(value);
					this.SendPropertyChanging();
					this._pname = value;
					this.SendPropertyChanged("pname");
					this.OnpnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color", DbType="VarChar(10)")]
		public string color
		{
			get
			{
				return this._color;
			}
			set
			{
				if ((this._color != value))
				{
					this.OncolorChanging(value);
					this.SendPropertyChanging();
					this._color = value;
					this.SendPropertyChanged("color");
					this.OncolorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Int")]
		public System.Nullable<int> weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(10)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="P_SPJ", Storage="_SPJs", ThisKey="pnum", OtherKey="pnum")]
		public EntitySet<SPJ> SPJs
		{
			get
			{
				return this._SPJs;
			}
			set
			{
				this._SPJs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SPJs(SPJ entity)
		{
			this.SendPropertyChanging();
			entity.P = this;
		}
		
		private void detach_SPJs(SPJ entity)
		{
			this.SendPropertyChanging();
			entity.P = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.J")]
	public partial class J : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _jnum;
		
		private string _jname;
		
		private string _city;
		
		private EntitySet<SPJ> _SPJs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnjnumChanging(string value);
    partial void OnjnumChanged();
    partial void OnjnameChanging(string value);
    partial void OnjnameChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    #endregion
		
		public J()
		{
			this._SPJs = new EntitySet<SPJ>(new Action<SPJ>(this.attach_SPJs), new Action<SPJ>(this.detach_SPJs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jnum", DbType="VarChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string jnum
		{
			get
			{
				return this._jnum;
			}
			set
			{
				if ((this._jnum != value))
				{
					this.OnjnumChanging(value);
					this.SendPropertyChanging();
					this._jnum = value;
					this.SendPropertyChanged("jnum");
					this.OnjnumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jname", DbType="VarChar(20)")]
		public string jname
		{
			get
			{
				return this._jname;
			}
			set
			{
				if ((this._jname != value))
				{
					this.OnjnameChanging(value);
					this.SendPropertyChanging();
					this._jname = value;
					this.SendPropertyChanged("jname");
					this.OnjnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(10)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="J_SPJ", Storage="_SPJs", ThisKey="jnum", OtherKey="jnum")]
		public EntitySet<SPJ> SPJs
		{
			get
			{
				return this._SPJs;
			}
			set
			{
				this._SPJs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SPJs(SPJ entity)
		{
			this.SendPropertyChanging();
			entity.J = this;
		}
		
		private void detach_SPJs(SPJ entity)
		{
			this.SendPropertyChanging();
			entity.J = null;
		}
	}
}
#pragma warning restore 1591
